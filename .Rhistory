harris_zip = merge(harris_zip,acreage_by_zip,by.x="Name",all=TRUE)
harris_zip[is.na(harris_zip)] <- 0
zcta_info <- read_csv("zcta_county_rel_10.csv")
zcta_info$Name = paste("<at><openparen>",zcta_info$ZCTA5,"<closeparen>",sep="")
harris_zip = merge(harris_zip,zcta_county_rel_10,by.x="Name")
harris_zip=harris_zip[!duplicated(harris_zip$Name),]
update.packages("rlang")
library(readr)
library(dplyr)
library(caret)
library(sf)
library(pls)
library(e1071)
library(standardize)
library(tidymodels)
states = c("USA", "UAE", "UK", "CHN")
democ = c(1,0,1,0)
gdp = c(400,20,150,320)
df = data.frame(states,democ,gdp)
View(df)
#create vectors
states = c("USA", "UAE", "UK", "CHN")
democ = c(1,0,1,0)
gdp = c(400,20,150,320)
#create dataframe
df = data.frame(states,democ,gdp)
index
?index
?where
df[4,4]
df[4,3]
df[4,3] = 280
df
df[4][3]
#create vectors
states = c("USA", "UAE", "UK", "CHN")
democ = c(1,0,1,0)
gdp = c(400,20,150,320)
#create dataframe
df = data.frame(states,democ,gdp)
#modify one value
df[4,3] = 280
View(df)
df[1]
df[,1]
df[df]
df
df[3]
df[4]
df[4,]
#create vectors
states = c("USA", "UAE", "UK", "CHN")
democ = c(1,0,1,0)
gdp = c(400,20,150,320)
#create dataframe
df = data.frame(states,democ,gdp)
#modify one value
df[4,3] = 280
#modify two values
df[c(1,2), 3] = c(410, 22)
#add a new column
df$gdp_percent = NA
View(df)
sum()
df$gdp_percent = df$gdp / sum(df$gdp)
View(df)
#create vectors
states = c("USA", "UAE", "UK", "CHN")
democ = c(1,0,1,0)
gdp = c(400,20,150,320)
#create dataframe
df = data.frame(states,democ,gdp)
#modify one value
df[4,3] = 280
#modify two values
df[c(1,2), 3] = c(410, 22)
#add a new column
df$gdp_percent = 100 * df$gdp / sum(df$gdp)
View(df)
pie(df$gdp_percent)
pie(df$gdp)
pie(df$democ)
pie(df$gdp)
bar(df$gdp)
barchart(df$gdp)
plot(df$gdp)
plot(df$gdp_percent)
?bar
?plot
barplot(df$gdp_percent)
barplot(df$gdp)
#my turn...
num1 = c(1,2,1,6)
num2 = c(3,5,0,7)
practice = data.frame(num1,num2)
View(practice)
practice$num3 = practice$num1 + practice$num2
View(practice)
num1 = c(1,2,1,6)
num2 = c(3,5,0,7)
practice = data.frame(num1,num2)
practice$total = practice$num1 + practice$num2
View(practice)
practice$total_percent = 100 * practice$total / sum(practice$total)
View(practice)
df.names
df.names()
names(df)
#my turn...
num1 = c(1,2,1,6)
num2 = c(3,5,0,7)
practice = data.frame(num1,num2)
practice$total = practice$num1 + practice$num2
practice$total_percent = 100 * practice$total / sum(practice$total)
names(df)[3] = GDP
#my turn...
num1 = c(1,2,1,6)
num2 = c(3,5,0,7)
practice = data.frame(num1,num2)
practice$total = practice$num1 + practice$num2
practice$total_percent = 100 * practice$total / sum(practice$total)
names(df)[3] = "GDP"
View(df)
View(df)
names(df)[c(1,4)] = c("States", "GDP_percent")
View(df)
names(df)[c(1,4)] = c("States", "GDP_Percent")
?sample
large_data = data.frame(sample(df$States,1000),
sample(df$democ,1000),
sample(df$GDP,1000),
sample(df$GDP_Percent,1000)
)
large_data = data.frame(sample(df$States,1000,replace=TRUE),
sample(df$democ,1000,replace=TRUE),
sample(df$GDP,1000,replace=TRUE),
sample(df$GDP_Percent,1000,replace=TRUE)
)
View(large_data)
large_data = data.frame(States = sample(df$States,1000,replace=TRUE),
democ = sample(df$democ,1000,replace=TRUE),
GDP = sample(df$GDP,1000,replace=TRUE),
GDP_Percent = sample(df$GDP_Percent,1000,replace=TRUE)
)
View(large_data)
#create vectors
states = c("USA", "UAE", "UK", "CHN")
democ = c(1,0,1,0)
gdp = c(400,20,150,320)
#create dataframe
df = data.frame(states,democ,gdp)
#modify one value
df[4,3] = 280
#modify two values
df[c(1,2), 3] = c(410, 22)
#add a new column
df$gdp_percent = 100 * df$gdp / sum(df$gdp)
#my turn...
num1 = c(1,2,1,6)
num2 = c(3,5,0,7)
practice = data.frame(num1,num2)
practice$total = practice$num1 + practice$num2
practice$total_percent = 100 * practice$total / sum(practice$total)
names(df)[3] = "GDP"
names(df)[c(1,4)] = c("States", "GDP_Percent")
large_data = data.frame(States = sample(df$States,1000,replace=TRUE),
democ = sample(df$democ,1000,replace=TRUE),
GDP = sample(df$GDP,1000,replace=TRUE)
)
#create vectors
states = c("USA", "UAE", "UK", "CHN")
democ = c(1,0,1,0)
gdp = c(400,20,150,320)
#create dataframe
df = data.frame(states,democ,gdp)
#modify one value
df[4,3] = 280
#modify two values
df[c(1,2), 3] = c(410, 22)
#add a new column
df$gdp_percent = 100 * df$gdp / sum(df$gdp)
#my turn...
num1 = c(1,2,1,6)
num2 = c(3,5,0,7)
practice = data.frame(num1,num2)
practice$total = practice$num1 + practice$num2
practice$total_percent = 100 * practice$total / sum(practice$total)
names(df)[3] = "GDP"
names(df)[c(1,4)] = c("States", "GDP_Percent")
large_data = data.frame(States = sample(df$States,1000,replace=TRUE),
democ = sample(df$democ,1000,replace=TRUE),
GDP = sample(df$GDP,1000,replace=TRUE)
funny_number = sample(c(1:10), 1000, replace=TRUE)
#create vectors
states = c("USA", "UAE", "UK", "CHN")
democ = c(1,0,1,0)
gdp = c(400,20,150,320)
#create dataframe
df = data.frame(states,democ,gdp)
#modify one value
df[4,3] = 280
#modify two values
df[c(1,2), 3] = c(410, 22)
#add a new column
df$gdp_percent = 100 * df$gdp / sum(df$gdp)
#my turn...
num1 = c(1,2,1,6)
num2 = c(3,5,0,7)
practice = data.frame(num1,num2)
practice$total = practice$num1 + practice$num2
practice$total_percent = 100 * practice$total / sum(practice$total)
names(df)[3] = "GDP"
names(df)[c(1,4)] = c("States", "GDP_Percent")
large_data = data.frame(States = sample(df$States,1000,replace=TRUE),
democ = sample(df$democ,1000,replace=TRUE),
GDP = sample(df$GDP,1000,replace=TRUE),
funny_number = sample(c(1:10), 1000, replace=TRUE)
)
View(large_data)
#create vectors
states = c("USA", "UAE", "UK", "CHN")
democ = c(1,0,1,0)
gdp = c(400,20,150,320)
#create dataframe
df = data.frame(states,democ,gdp)
#modify one value
df[4,3] = 280
#modify two values
df[c(1,2), 3] = c(410, 22)
#add a new column
df$gdp_percent = 100 * df$gdp / sum(df$gdp)
#my turn...
num1 = c(1,2,1,6)
num2 = c(3,5,0,7)
practice = data.frame(num1,num2)
practice$total = practice$num1 + practice$num2
practice$total_percent = 100 * practice$total / sum(practice$total)
names(df)[3] = "GDP"
names(df)[c(1,4)] = c("States", "GDP_Percent")
large_data = data.frame(States = sample(df$States,100000,replace=TRUE),
democ = sample(df$democ,100000,replace=TRUE),
GDP = sample(df$GDP,100000,replace=TRUE),
funny_number = sample(c(1:10), 100000, replace=TRUE)
)
View(large_data)
income_data = data.frame(grade = sample(c(1:100), 1000, replace=TRUE),
income = sample(c(1:1000000), 1000, replace=TRUE)
)
View(income_data)
plot(income_data$grade, income_data$income)
?sort
?order
income_data[order(income_data$grade)]
income_data[order(income_data$grade),]
income_data = income_data[order(income_data$grade),]
View(income_data)
income_data = data.frame(grade = sample(c(1:100), 1000, replace=TRUE),
income = sample(c(1:1000000), 1000, replace=TRUE)
)
income_data = income_data[-order(income_data$grade),]
View(df)
View(income_data)
income_data = income_data[order(income_data$grade),]
income_data = data.frame(grade = sample(c(1:100), 1000, replace=TRUE),
income = sample(c(1:1000000), 1000, replace=TRUE)
)
income_data = income_data[order(income_data$grade),]
?order
#create vectors
states = c("USA", "UAE", "UK", "CHN")
democ = c(1,0,1,0)
gdp = c(400,20,150,320)
#create dataframe
df = data.frame(states,democ,gdp)
#modify one value
df[4,3] = 280
#modify two values
df[c(1,2), 3] = c(410, 22)
#add a new column
df$gdp_percent = 100 * df$gdp / sum(df$gdp)
#my turn...
num1 = c(1,2,1,6)
num2 = c(3,5,0,7)
practice = data.frame(num1,num2)
practice$total = practice$num1 + practice$num2
practice$total_percent = 100 * practice$total / sum(practice$total)
names(df)[3] = "GDP"
names(df)[c(1,4)] = c("States", "GDP_Percent")
large_data = data.frame(States = sample(df$States,100000,replace=TRUE),
democ = sample(df$democ,100000,replace=TRUE),
GDP = sample(df$GDP,100000,replace=TRUE),
funny_number = sample(c(1:10), 100000, replace=TRUE)
)
income_data = data.frame(grade = sample(c(1:100), 1000, replace=TRUE),
income = sample(c(1:1000000), 1000, replace=TRUE)
)
income_data = income_data[order(-income_data$grade),]
View(income_data)
income_data = income_data[order(-income_data$grade),order(-income_data$income)]
View(income_data)
income_data = income_data[order(-income_data$grade),]
View(income_data)
x = c(2, 5, 4)
y = c(1, 8, 3)
mean(x)
mean(y)
cor(x,y)
?cor
cov(x,y)
mean(x)
mean(y)
x = c(2, 5, 5)
mean(x)
mean(y)
x=c(4,2,3)
mean(x)
cor(x,y)
?cor
install.packages("tinytex")
install.packages("pdflatex")
library("tinytex")
install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/noahh/OneDrive/Documents/pols_3316/lab_assignment_2")
country_data = read.csv("countries.csv")
linear_model = lm(country_data$fertility ~ country_data$gdppcap08)
summary(linear_model)
plot(country_data$gdppcap08, country_data$fertility, xlab="GDP Per Capita (2008)", ylab="Fertility Rate")
abline(linear_model, col='brown')
log_model = lm(country_data$fertility ~ log(country_data$gdppcap08))
summary(log_model)
plot(log(country_data$gdppcap08), country_data$fertility, xlab="Logarithm of GDP Per Capita (2008)", ylab="Fertility Rate")
abline(log_model, col='brown')
prob_success = 7 / 8
prob_a = dbinom(8, size = 10, prob = prob_success) +
dbinom(9, size = 10, prob = prob_success) +
dbinom(10, size = 10, prob = prob_success)
prob_a
prob_b = choose(10,8) * (prob_success)^8 * (1-prob_success)^(10-8) +
choose(10,9) * (prob_success)^9 * (1-prob_success)^(10-9) +
choose(10,10) * (prob_success)^10 * (1-prob_success)^(10-10)
prob_b
prob_c = 1 - pbinom(7, size = 10, prob = prob_success)
prob_c
expected_val = 40
prob_poiss = dpois(38, lambda = expected_val)
prob_poiss
set.seed(3316)
population_age = country_data$pop_age
population_age = na.omit(population_age)
sample_ages = sample(population_age, 30, replace=TRUE)
mu = mean(population_age)
xbar = mean(sample_ages)
mu
xbar
std_dev = sd(sample_ages)
std_dev
deg = length(sample_ages) - 1
SE = std_dev / length(sample_ages)
t_val = qt(1.9/2, df=deg)
ci_lower = xbar - t_val * SE
ci_upper = xbar + t_val * SE
ci_lower
ci_upper
pop_mean = 43
gini = country_data$gini10
gini = na.omit(gini)
t.test(gini, mu=pop_mean)
?abline
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/noahh/OneDrive/Documents/pols_3316/lab_assignment_2")
country_data = read.csv("countries.csv")
plot(log(country_data$gdppcap08), country_data$fertility,
xlab="Logarithm of GDP Per Capita (2008)", ylab="Fertility Rate")
abline(9.64788, -0.78487, col='brown')
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/noahh/OneDrive/Documents/pols_3316/lab_assignment_3")
state = read.csv("state.csv")
countries = read.csv("countries.csv")
table(state$region)
state_subset = state[state$region == "South" | state$region == "Northeast", c("abort_rank3", "region")]
chisq.test(state_subset$abort_rank3, state_subset$region)
state_subset = state[state$region == "South" | state$region == "Northeast", c("abort_rank3", "region")]
abortion_test = chisq.test(state_subset$abort_rank3, state_subset$region)
summary(abortion_test)
state_subset = state[state$region == "South" | state$region == "Northeast", c("abort_rank3", "region")]
abortion_test = chisq.test(state_subset$abort_rank3, state_subset$region)
abortion_test
summary(abortion_test)
state_subset = state[state$region == "South" | state$region == "Northeast", c("abort_rank3", "region")]
abortion_test = chisq.test(state_subset$abort_rank3, state_subset$region)
abortion_test
abortion_test$observed
abortion_test$expected
state_subset = state[state$region == "South" | state$region == "Northeast", c("abort_rank3", "region")]
abortion_test = chisq.test(state_subset$abort_rank3, state_subset$region)
abortion_test
abortion_test$observed
abortion_test$expected
View(state)
state[state$region == "Northeast"]$stateid
state[state$region == "Northeast",]$stateid
state[state$region == "Northeast",]$abort_rank3
state_subset = state[state$region == "South" | state$region == "Northeast", c("abort_rank3", "region")]
abortion_test = chisq.test(state_subset$abort_rank3, state_subset$region)
abortion_test
abortion_test$observed
abortion_test$expected
abortion_test$residuals
state[state$region == "Northeast",]$(stateid, abort_rank3
state[state$region == "Northeast",]$(stateid, abort_rank3)
state[state$region == "Northeast",c(stateid, abort_rank3)]
state[state$region == "Northeast",c("stateid", "abort_rank3")]
state[state$region == "South",c("stateid", "abort_rank3")]
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/noahh/OneDrive/Documents/pols_3316/lab_assignment_3")
state = read.csv("state.csv")
countries = read.csv("countries.csv")
state_subset = state[state$region == "South" | state$region == "Northeast", c("abort_rank3", "region")]
abortion_test = chisq.test(state_subset$abort_rank3, state_subset$region)
abortion_test
abortion_test$observed
abortion_test$expected
abortion_test$residuals
library(ggplot2)
countries$religoin[is.na(countries$religoin)] = "None"
ggplot(countries, aes(religoin, pop_age)) +  geom_boxplot() + labs(title="Religion and Age", x = "Religion", y="Mean Age")
anova_model <- aov(pop_age ~ religoin, countries)
summary(anova_model)
plot(state$ba_or_more, state$unemploy)
plot(state$ba_or_more, state$prcapinc)
plot(state$unemploy, state$prcapinc)
ind_vars = state[,c("ba_or_more", "unemploy")]
dep_var = state[,"prcapinc"]
View(ind_vars)
View(ind_vars)
ind_vars = state[,c("ba_or_more", "unemploy")]
dep_var = state[,"prcapinc"]
plot(ind_vars$ba_or_more, dep_var, xlab="% College Educated", ylab="Per Capita Income")
plot(ind_vars$ba_or_more, dep_var, xlab="% College Educated", ylab="Per Capita Income")
plot(ind_vars$unemploy, dep_var, xlab="Unemployment Rate", ylab="Per Capita Income")
library(stargazer)
install.packages(stargazer)
install.packages("stargazer")
ols = lm(dep_var ~ ind_vars$ba_or_more + ind_vars$unemploy)
summary(ols)
ols = lm(dep_var ~ ind_vars$ba_or_more + ind_vars$unemploy)
summary(ols)
library(stargazer)
stargazer(ols)
library(stargazer)
ols = lm(dep_var ~ ind_vars$ba_or_more + ind_vars$unemploy)
stargazer(ols, type = 'text', no.space = TRUE)
ols_2 = lm(dep_var ~ ind_vars$ba_or_more * ind_vars$unemploy)
stargazer(ols_2, type = 'text', no.space = TRUE)
plot(ols_2)
plot(ind_vars$ba_or_more * ind_vars$unemploy, dep_var)
library(stargazer)
ols = lm(dep_var ~ ind_vars$ba_or_more + ind_vars$unemploy)
stargazer(ols, type = 'text', no.space = TRUE)
plot(ind_vars$ba_or_more * ind_vars$unemploy, dep_var, xlab = "Multiplied Independent Variables", ylab = "Per Capita Income")
plot(log(ind_vars$ba_or_more * ind_vars$unemploy), dep_var, xlab = "Multiplied Independent Variables", ylab = "Per Capita Income")
ols_2 = lm(dep_var ~ log(ind_vars$ba_or_more * ind_vars$unemploy))
stargazer(ols_2, type = 'text', no.space = TRUE)
plot(ind_vars$ba_or_more * ind_vars$unemploy, dep_var, xlab = "Multiplied Independent Variables", ylab = "Per Capita Income")
ols_2 = lm(dep_var ~ ind_vars$ba_or_more * ind_vars$unemploy)
stargazer(ols_2, type = 'text', no.space = TRUE)
ols_2 = lm(dep_var ~ (ind_vars$ba_or_more * ind_vars$unemploy))
stargazer(ols_2, type = 'text', no.space = TRUE)
install.packages("nycflights13")
library(nycflights13)
?nycflights13
nycflights13
factor(c("a","b","c","d"))[1] == a
factor(c("a","b","c","d"))[1] == "a"
install.packages("lubridate")
library(lubridate)
dob = "March 31, 2003"
dob = mdy(dob)
dob
install.packages(c("nycflights13", "tidyverse"))
version
normalize <- function(x) {
mi = min(x)
ma = max(x)
for(i in 1:length(x)) {
x[i] = 100 * (x[i] - mi) / (ma - mi)
}
return(x)
}
randu
runif()
runif(10)
100 * runif(10)
nums = 100 * runif(50)
nums = normalize(nums)
nums
nums = normalize(nums)
nums
harris_zip = st_read("composite_harris_map.geojson")
setwd("~/harris_county_maps")
harris_zip = st_read("composite_harris_map.geojson")
library(sf)
harris_zip = st_read("composite_harris_map.geojson")
harris_zip[1,]
length(harris_zip)
n
nrow(harris_zip)
for(i in 1:129) {}
for(i in 1:129) {
print(harris_zip[i,5])
}
